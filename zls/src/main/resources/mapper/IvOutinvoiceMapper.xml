<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huarui.zls.mapper.IvOutinvoiceMapper">
  <resultMap id="BaseResultMap" type="com.huarui.zls.pojo.IvOutinvoice">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="EmpID" jdbcType="INTEGER" property="empid" />
    <result column="InID" jdbcType="INTEGER" property="inid" />
    <result column="StartNo" jdbcType="VARCHAR" property="startno" />
    <result column="EndNo" jdbcType="VARCHAR" property="endno" />
    <result column="Counts" jdbcType="INTEGER" property="counts" />
    <result column="OutDate" jdbcType="DATE" property="outdate" />
    <result column="OutEmpID" jdbcType="INTEGER" property="outempid" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, EmpID, InID, StartNo, EndNo, Counts, OutDate, OutEmpID
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from iv_outinvoice
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from iv_outinvoice
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.huarui.zls.pojo.IvOutinvoice">
    insert into iv_outinvoice (ID, EmpID, InID, 
      StartNo, EndNo, Counts, 
      OutDate, OutEmpID)
    values (#{id,jdbcType=INTEGER}, #{empid,jdbcType=INTEGER}, #{inid,jdbcType=INTEGER}, 
      #{startno,jdbcType=VARCHAR}, #{endno,jdbcType=VARCHAR}, #{counts,jdbcType=INTEGER}, 
      #{outdate,jdbcType=DATE}, #{outempid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.huarui.zls.pojo.IvOutinvoice">
    insert into iv_outinvoice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="empid != null">
        EmpID,
      </if>
      <if test="inid != null">
        InID,
      </if>
      <if test="startno != null">
        StartNo,
      </if>
      <if test="endno != null">
        EndNo,
      </if>
      <if test="counts != null">
        Counts,
      </if>
      <if test="outdate != null">
        OutDate,
      </if>
      <if test="outempid != null">
        OutEmpID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="empid != null">
        #{empid,jdbcType=INTEGER},
      </if>
      <if test="inid != null">
        #{inid,jdbcType=INTEGER},
      </if>
      <if test="startno != null">
        #{startno,jdbcType=VARCHAR},
      </if>
      <if test="endno != null">
        #{endno,jdbcType=VARCHAR},
      </if>
      <if test="counts != null">
        #{counts,jdbcType=INTEGER},
      </if>
      <if test="outdate != null">
        #{outdate,jdbcType=DATE},
      </if>
      <if test="outempid != null">
        #{outempid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.huarui.zls.pojo.IvOutinvoice">
    update iv_outinvoice
    <set>
      <if test="empid != null">
        EmpID = #{empid,jdbcType=INTEGER},
      </if>
      <if test="inid != null">
        InID = #{inid,jdbcType=INTEGER},
      </if>
      <if test="startno != null">
        StartNo = #{startno,jdbcType=VARCHAR},
      </if>
      <if test="endno != null">
        EndNo = #{endno,jdbcType=VARCHAR},
      </if>
      <if test="counts != null">
        Counts = #{counts,jdbcType=INTEGER},
      </if>
      <if test="outdate != null">
        OutDate = #{outdate,jdbcType=DATE},
      </if>
      <if test="outempid != null">
        OutEmpID = #{outempid,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huarui.zls.pojo.IvOutinvoice">
    update iv_outinvoice
    set EmpID = #{empid,jdbcType=INTEGER},
      InID = #{inid,jdbcType=INTEGER},
      StartNo = #{startno,jdbcType=VARCHAR},
      EndNo = #{endno,jdbcType=VARCHAR},
      Counts = #{counts,jdbcType=INTEGER},
      OutDate = #{outdate,jdbcType=DATE},
      OutEmpID = #{outempid,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>